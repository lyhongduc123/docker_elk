input {
  gelf {
    port => 12201
    type => docker
  }
  # syslog {
  #   port => 5000
  #   codec => "plain"
  #   tags => ["docker"]
  # }
  # tcp {
  #   port => 5000
  #   codec => "plain"
  #   tags => ["docker"]
  # }
}

filter {
    # Parse Docker JSON log messages
  json {
    source => "message"
    target => "docker"
    skip_on_invalid_json => true
  }

  # Add tags based on container information if available
  if [docker][log] {
    mutate {
      add_tag => ["docker_log"]
    }
  }

  # Extract container metadata from the file path if Filebeat provides it
  grok {
    match => { "[log][file][path]" => "/var/lib/docker/containers/%{DATA:container_id}/%{GREEDYDATA:filename}" }
    tag_on_failure => []
  }

  # Optionally rename docker.log to message for better compatibility
  mutate {
    rename => { "[docker][log]" => "message" }
  }

  # Clean up noisy fields
  mutate {
    remove_field => ["input", "agent", "ecs", "host", "@version", "log", "docker"]
  }
  }

output {
  stdout {}
  elasticsearch {
    hosts => ["https://es01:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    cacert => ["certificates/ca/ca.crt"]
    index => "docker-logs-%{+YYYY.MM.dd}"
  }
}
